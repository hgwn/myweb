"use strict";describe("parseOptions",function(){function e(e){var a=null;return e.valuesFn(o,null).then(function(e){a=e}),o.$digest(),a}function a(e,a){expect(e).toBeDefined(),expect(e.length).toBe(a.length)}var l,o,n;beforeEach(module("mgcrea.ngStrap.helpers.parseOptions")),beforeEach(inject(function(e,a,t){o=e,l=a,n=t})),describe("for array data sources",function(){describe('with "label for value in array" format',function(){it("should support using objects",function(){o.colors=[{name:"black",shade:"dark"},{name:"white",shade:"light"},{name:"red",shade:"dark"},{name:"blue",shade:"dark"},{name:"yellow",shade:"light"},{name:"false",shade:!1},{name:"",shade:""}];var l=n("color.name for color in colors"),t=e(l);a(t,o.colors),angular.forEach(t,function(e){expect(e.label).toBe(o.colors[e.index].name),expect(e.value).toBe(o.colors[e.index])})}),it("should support basic value types",function(){o.values=["true","false",!0,!1,0,1,14.5,18.3,0,-1,new Date];var l=n("val for val in values"),t=e(l);a(t,o.values),angular.forEach(t,function(e){expect(e.label).toBe(o.values[e.index]),expect(e.value).toBe(o.values[e.index])})}),it("should support boolean values",function(){o.values=[!0,!1];var l=n("val for val in values"),t=e(l);a(t,o.values),angular.forEach(t,function(e){expect(e.label).toBe(o.values[e.index]),expect(e.value).toBe(o.values[e.index])})}),it("should support null/undefined/empty string values",function(){o.values=["true",void 0,"false","",null];var l=n("val for val in values"),t=e(l);a(t,o.values),angular.forEach(t,function(e){expect(e.label).toBe(o.values[e.index]),expect(e.value).toBe(o.values[e.index])})}),it("should support filtered values",function(){o.values=["foo","bar","baz"];var l=n("val for val in values | filter:b:startsWith"),t=e(l);a(t,o.values),angular.forEach(t,function(e){expect(e.label).toBe(o.values[e.index]),expect(e.value).toBe(o.values[e.index])})})}),describe('with "select as label for value in array" format',function(){it("should support using objects",function(){o.colors=[{name:"black",shade:"dark"},{name:"white",shade:"light"},{name:"red",shade:"dark"},{name:"blue",shade:"dark"},{name:"yellow",shade:"light"},{name:"false",shade:!1},{name:"",shade:""}];var l=n("color.shade as color.name for color in colors"),t=e(l);a(t,o.colors),angular.forEach(t,function(e){expect(e.label).toBe(o.colors[e.index].name),expect(e.value).toBe(o.colors[e.index].shade)})})})})});