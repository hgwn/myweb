"use strict";describe("timepicker",function(){function e(e,t){e=m[e],angular.extend(d,angular.copy(e.scope||m["default"].scope),t);var i=$(e.element).appendTo(l);return i=n(i)(d),d.$digest(),jQuery(i[0])}function t(e,t){var n=$.Event("keydown");n.which=n.keyCode=t,angular.element(e[0]).triggerHandler(n)}var n,i,o,r,a,d,l,c,s;beforeEach(module("ngAnimate")),beforeEach(module("ngAnimateMock")),beforeEach(module("ngSanitize")),beforeEach(module("mgcrea.ngStrap.timepicker")),beforeEach(inject(function(e,t,m,u,p,g){d=t.$new(),l=$("<div>").attr("id","sandbox").appendTo($("body")),n=m,i=u,o=e.get("$animate"),s=e.get("$timeout");var h=o.flush||o.triggerCallbacks;o.flush=function(){h.call(o),o.triggerCallbacks||s.flush()},r=p,a=g,c=new Date})),afterEach(function(){d.$destroy(),l.remove()});var m={"default":{scope:{selectedTime:new Date},element:'<input type="text" ng-model="selectedTime" bs-timepicker>'},"default-with-namespace":{scope:{selectedTime:new Date},element:'<input type="text" ng-model="selectedTime" bs-timepicker data-prefix-event="datepicker">'},"default-with-id":{scope:{selectedTime:new Date},element:'<input id="timepicker1" type="text" ng-model="selectedTime" bs-timepicker>'},"value-past":{scope:{selectedTime:new Date(1970,0,1,10,30,42)},element:'<input type="text" ng-model="selectedTime" bs-timepicker>'},"markup-ngRepeat":{element:'<ul><li ng-repeat="i in [1, 2, 3]"><input type="text" ng-model="selectedTime" bs-timepicker></li></ul>'},"markup-ngChange":{scope:{selectedDate:new Date(1970,0,1,10,30,42),onChange:function(){}},element:'<input type="text" ng-model="selectedTime" ng-change="onChange()" bs-timepicker>'},"markup-ngRequired":{scope:{selectedTime:new Date(2012,5,15,9,30,42)},element:'<input type="text" ng-model="selectedTime" ng-required="true" bs-timepicker>'},"options-animation":{element:'<div class="btn" data-animation="am-flip-x" ng-model="timepickeredIcon" bs-timepicker></div>'},"options-placement":{element:'<div class="btn" data-placement="bottom" ng-model="timepickeredIcon" bs-timepicker></div>'},"options-placement-exotic":{element:'<div class="btn" data-placement="bottom-right" ng-model="timepickeredIcon" bs-timepicker></div>'},"options-trigger":{element:'<div class="btn" data-trigger="hover" ng-model="timepickeredIcon" bs-timepicker></div>'},"options-template":{element:'<input type="text" data-template-url="custom" ng-model="selectedTime" bs-timepicker>'},"options-timeFormat":{scope:{selectedTime:new Date(1970,0,1,10,30,42)},element:'<input type="text" ng-model="selectedTime" data-time-format="HH:mm" bs-timepicker>'},"options-timeFormat-seconds":{scope:{selectedTime:new Date(1970,0,1,10,30,42)},element:'<input type="text" ng-model="selectedTime" data-time-format="HH:mm:ss" bs-timepicker>'},"options-timeFormat-seconds-meridian":{scope:{selectedTime:new Date(1970,0,1,10,30,42)},element:'<input type="text" ng-model="selectedTime" data-time-format="HH:mm:ss a" bs-timepicker>'},"options-timezone-utc":{element:'<input type="text" ng-model="selectedTime" data-time-format="HH:mm" data-timezone="UTC" bs-timepicker>'},"options-timeType-string":{scope:{selectedTime:"10:30"},element:'<input type="text" ng-model="selectedTime" data-time-type="string" data-time-format="HH:mm" bs-timepicker>'},"options-timeType-string-null":{scope:{selectedTime:null},element:'<input type="text" ng-model="selectedTime" data-time-type="string" data-time-format="HH:mm" bs-timepicker>'},"options-timeType-number":{scope:{selectedTime:new Date(1970,0,1,10,30,42).getTime()},element:'<input type="text" ng-model="selectedTime" data-time-type="number" data-time-format="HH:mm" bs-timepicker>'},"options-timeType-unix":{scope:{selectedTime:new Date(1970,0,1,10,30,42)/1e3},element:'<input type="text" ng-model="selectedTime" data-time-type="unix" data-time-format="HH:mm" bs-timepicker>'},"options-timeType-iso":{scope:{selectedTime:new Date(1970,0,1,10,30,42).toISOString()},element:'<input type="text" ng-model="selectedTime" data-time-type="iso" data-time-format="HH:mm" bs-timepicker>'},"options-minTime":{scope:{selectedTime:new Date(1970,0,1,10,30,0),minTime:"09:30 AM"},element:'<input type="text" ng-model="selectedTime" data-min-time="{{minTime}}" bs-timepicker>'},"options-minTime-now":{scope:{},element:'<input type="text" ng-model="selectedTime" data-min-time="now" bs-timepicker>'},"options-maxTime-now":{scope:{},element:'<input type="text" ng-model="selectedTime" data-max-time="now" bs-timepicker>'},"options-maxTime":{scope:{selectedTime:new Date(1970,0,1,10,30,0),maxTime:"10:30 PM"},element:'<input type="text" ng-model="selectedTime" data-max-time="{{maxTime}}" bs-timepicker>'},"options-autoclose":{element:'<input type="text" ng-model="selectedTime" data-autoclose="{{autoclose}}" bs-timepicker>'},"options-useNative":{element:'<input type="text" ng-model="selectedTime" data-use-native="1" bs-timepicker>'},"options-modelTimeFormat":{scope:{selectedTime:"12:20:10"},element:'<input type="text" ng-model="selectedTime" data-time-type="string" data-model-time-format="HH:mm:ss" data-time-format="HH:mm" bs-timepicker>'},"options-arrowBehavior":{scope:{selectedTime:new Date(1970,0,1,10,30,42),arrowBehavior:"pager",timeType:"date"},element:'<input type="text" ng-model="selectedTime" length="5" data-time-type="{{ timeType }}" data-arrow-behavior="{{ arrowBehavior }}" bs-timepicker>'},"options-roundDisplay":{element:'<input type="text" data-minute-step="15" ng-model="selectedTime" data-round-display="{{roundDisplay}}" bs-timepicker>'},"options-roundDisplay-seconds":{element:'<input type="text" data-minute-step="15" data-second-step="20" ng-model="selectedTime" data-round-display="{{roundDisplay}}" data-time-format="HH:mm:ss" bs-timepicker>'},"bsShow-attr":{scope:{selectedTime:new Date},element:'<input type="text" ng-model="selectedTime" bs-timepicker bs-show="true">'},"bsShow-binding":{scope:{isVisible:!1,selectedTime:new Date},element:'<input type="text" ng-model="selectedTime" bs-timepicker bs-show="isVisible">'},"options-container":{scope:{selectedTime:new Date},element:'<input type="text" data-container="{{container}}" ng-model="selectedTime" bs-timepicker>'}};describe("with default template",function(){it("should open on focus",function(){var t=e("default");expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)}),it("should close on blur",function(){var t=e("default");expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(t[0]).triggerHandler("focus"),angular.element(t[0]).triggerHandler("blur"),expect(l.children(".dropdown-menu.timepicker").length).toBe(0)}),it("should correctly compile inner content",function(){var t=e("default");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr").length).toBe(r.defaults.length),expect(l.find(".dropdown-menu tbody .btn").length).toBe(4*r.defaults.length)}),it("should correctly display time",function(){var t=e("default");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe(a(d.selectedTime,"mm")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(6) .btn-primary").text()).toBe(a(d.selectedTime,"a"))}),it("should correctly update the model when the view is updated",function(){var t=e("value-past");expect(t.val()).toBe("10:30 AM"),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(12)")).triggerHandler("click"),expect(t.val()).toBe("12:30 PM"),expect(d.selectedTime.toISOString().substr(0,10)).toBe("1970-01-01"),angular.element(l.find(".dropdown-menu tbody .btn:contains(12)")).triggerHandler("click"),expect(d.selectedTime.toISOString().substr(0,10)).toBe("1970-01-01"),angular.element(l.find(".dropdown-menu tbody .btn:contains(11)")).triggerHandler("click"),expect(t.val()).toBe("11:30 AM"),expect(d.selectedTime).toEqual(new Date(1970,0,1,11,30,42)),expect(d.selectedTime.toISOString().substr(0,10)).toBe("1970-01-01")}),it("should correctly parse input time",function(){var t=e("value-past");angular.element(t[0]).triggerHandler("focus"),t.val("12:30 AM"),angular.element(t[0]).triggerHandler("change"),expect(d.selectedTime.getHours()).toBe(0),t.val("12:30 PM"),angular.element(t[0]).triggerHandler("change"),expect(d.selectedTime.getHours()).toBe(12)}),it("should correctly support null values",function(){var t=e("default",{selectedTime:null});angular.element(t[0]).triggerHandler("focus"),expect(t.val()).toBe(""),expect(l.find(".dropdown-menu tbody tr").length).toBe(r.defaults.length),expect(l.find(".dropdown-menu tbody .btn").length).toBe(4*r.defaults.length),t.val("0"),angular.element(t[0]).triggerHandler("change")}),it("should correctly support undefined values",function(){var t=e("default",{selectedTime:void 0});angular.element(t[0]).triggerHandler("focus"),expect(t.val()).toBe(""),expect(l.find(".dropdown-menu tbody tr").length).toBe(r.defaults.length),expect(l.find(".dropdown-menu tbody .btn").length).toBe(4*r.defaults.length),angular.element(l.find(".dropdown-menu tbody button:eq(0)")[0]).triggerHandler("click"),expect(angular.isDate(d.selectedTime)).toBeTruthy()}),it("should ignore switch meridians with undefined time values",function(){var t=e("default",{selectedTime:void 0});expect(t.val()).toBe(""),angular.element(t[0]).triggerHandler("focus");var n=angular.element(l.find(".dropdown-menu tbody td:eq(6) button:eq(0)")[0]);spyOn(d.$$childHead,"$switchMeridian"),n.triggerHandler("click"),expect(d.$$childHead.$switchMeridian).toHaveBeenCalled()}),it("should correctly support invalid values",function(){var t=e("default");t.val("invalid"),angular.element(t[0]).triggerHandler("change"),angular.element(t[0]).triggerHandler("focus"),expect(1*l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text().trim()%12).toBe(c.getHours()%12),angular.element(l.find(".dropdown-menu tbody tr:eq(0) td:eq(0) .btn")[0]).triggerHandler("click"),expect(d.selectedTime.getHours()).not.toBe(c.getHours())}),it("should handle null values",function(){var t=e("default");t.val(""),angular.element(t[0]).triggerHandler("change"),expect(d.selectedTime).toBeNull()}),it("should support ngRepeat markup",function(){var t=e("markup-ngRepeat");angular.element(t.find("[bs-timepicker]:eq(0)")).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr").length).toBe(r.defaults.length),expect(l.find(".dropdown-menu tbody .btn").length).toBe(4*r.defaults.length)}),it("should support ngChange markup",function(){var t=e("markup-ngChange");angular.element(t[0]).triggerHandler("focus");var n=spyOn(d,"onChange").and.callThrough();angular.element(l.find(".dropdown-menu tbody .btn:eq(1)")[0]).triggerHandler("click"),expect(n).toHaveBeenCalled()}),it("should support ngRequired markup",function(){var t=e("markup-ngRequired");expect(t.val()).toBe("9:30 AM"),expect(d.selectedTime).toBeDefined(),expect(d.selectedTime).toEqual(new Date(2012,5,15,9,30,42)),angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe(a(d.selectedTime,"mm")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(6) .btn-primary").text()).toBe(a(d.selectedTime,"a"))}),it("should consider empty value valid-date with ngRequired markup",function(){var t=e("markup-ngRequired");expect(t.hasClass("ng-valid")).toBe(!0),expect(t.hasClass("ng-valid-required")).toBe(!0),angular.element(t[0]).triggerHandler("focus"),t.val(""),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-date")).toBe(!0),expect(t.hasClass("ng-invalid")).toBe(!0),expect(t.hasClass("ng-invalid-required")).toBe(!0)}),it("should consider empty value valid-parse without ngRequired markup",function(){var t=e("default");expect(t.hasClass("ng-valid")).toBe(!0),angular.element(t[0]).triggerHandler("focus"),t.val(""),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-date")).toBe(!0),expect(t.hasClass("ng-valid")).toBe(!0)})}),describe("resource allocation",function(){it("should not create additional scopes after first show",function(){var t=e("default");angular.element(t[0]).triggerHandler("focus"),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),angular.element(t[0]).triggerHandler("blur"),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0);for(var n=countScopes(d,0),i=0;10>i;i++)angular.element(t[0]).triggerHandler("focus"),o.flush(),angular.element(t[0]).triggerHandler("blur"),o.flush();expect(countScopes(d,0)).toBe(n)}),it("should destroy scopes when destroying directive scope",function(){var t=countScopes(d,0),n=d;d=d.$new();for(var i=e("default"),r=0;10>r;r++)angular.element(i[0]).triggerHandler("focus"),o.flush(),angular.element(i[0]).triggerHandler("blur"),o.flush();d.$destroy(),d=n,expect(countScopes(d,0)).toBe(t)})}),describe("bsShow attribute",function(){it("should support setting to a boolean value",function(){e("bsShow-attr"),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)}),it("should support binding",function(){e("bsShow-binding"),expect(d.isVisible).toBeFalsy(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0),d.isVisible=!0,d.$digest(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),d.isVisible=!1,d.$digest(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0)}),it("should support initial value false",function(){e("bsShow-binding"),expect(d.isVisible).toBeFalsy(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0)}),it("should support initial value true",function(){e("bsShow-binding",{isVisible:!0}),expect(d.isVisible).toBeTruthy(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)}),it("should support undefined value",function(){e("bsShow-binding",{isVisible:void 0}),expect(l.children(".dropdown-menu.timepicker").length).toBe(0)}),it("should support string value",function(){e("bsShow-binding",{isVisible:"a string value"}),expect(l.children(".dropdown-menu.timepicker").length).toBe(0),d.isVisible="TRUE",d.$digest(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),d.isVisible="dropdown",d.$digest(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0),d.isVisible="timepicker,tooltip",d.$digest(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)})}),describe("show / hide events",function(){it("should dispatch show and show.before events",function(){var e=r(l,{$datevalue:new Date},{scope:d,options:m["default"].scope}),t=spyOn(e.$scope,"$emit");d.$digest(),e.show(),expect(t).toHaveBeenCalledWith("tooltip.show.before",e),expect(t).not.toHaveBeenCalledWith("tooltip.show",e),o.flush(),expect(t).toHaveBeenCalledWith("tooltip.show",e)}),it("should dispatch hide and hide.before events",function(){var e=r(l,{$datevalue:new Date},{scope:d,options:m["default"].scope});d.$digest(),e.show();var t=spyOn(e.$scope,"$emit");e.hide(),expect(t).toHaveBeenCalledWith("tooltip.hide.before",e),expect(t).not.toHaveBeenCalledWith("tooltip.hide",e),o.flush(),expect(t).toHaveBeenCalledWith("tooltip.hide",e)}),it("should call show.before event with popover element instance id",function(){var t=e("default-with-id"),n="";d.$on("tooltip.show.before",function(e,t){n=t.$id}),angular.element(t[0]).triggerHandler("focus"),d.$digest(),expect(n).toBe("timepicker1")})}),describe("options",function(){describe("animation",function(){it("should default to `am-fade` animation",function(){var t=e("default");angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu").hasClass("am-fade")).toBeTruthy()}),it("should support custom animation",function(){var t=e("options-animation");angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu").hasClass("am-flip-x")).toBeTruthy()})}),describe("autoclose",function(){it("should close on select if truthy",function(){var t=e("options-autoclose",{autoclose:"true"});angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),angular.element(l.find(".dropdown-menu tbody .btn:first")).triggerHandler("click"),s.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(0)}),it("should NOT close on select if falsy",function(){var t=e("options-autoclose",{autoclose:"false"});angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),angular.element(l.find(".dropdown-menu tbody .btn:first")).triggerHandler("click"),s.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)})}),describe("placement",function(){var t;beforeEach(inject(function(e){t=e})),it("should default to `bottom-left` placement",function(){var n=e("default");angular.element(n[0]).triggerHandler("focus"),t.flush(),expect(l.children(".dropdown-menu").hasClass("bottom-left")).toBeTruthy()}),it("should support placement",function(){var n=e("options-placement");angular.element(n[0]).triggerHandler("focus"),t.flush(),expect(l.children(".dropdown-menu").hasClass("bottom")).toBeTruthy()}),it("should support exotic-placement",function(){var n=e("options-placement-exotic");angular.element(n[0]).triggerHandler("focus"),t.flush(),expect(l.children(".dropdown-menu").hasClass("bottom-right")).toBeTruthy()})}),describe("trigger",function(){it("should support an alternative trigger",function(){var t=e("options-trigger");expect(l.children(".dropdown-menu").length).toBe(0),angular.element(t[0]).triggerHandler("mouseenter"),expect(l.children(".dropdown-menu").length).toBe(1),angular.element(t[0]).triggerHandler("mouseleave"),expect(l.children(".dropdown-menu").length).toBe(0)})}),describe("template",function(){it("should support custom template",function(){i.put("custom",'<div class="dropdown-menu"><div class="dropdown-inner">foo: {{selectedTime}}</div></div>');var t=e("options-template");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-inner").text()).toBe('foo: "'+d.selectedTime.toISOString()+'"')}),it("should support template with ngRepeat",function(){i.put("custom",'<div class="dropdown-menu"><div class="dropdown-inner"><ul><li ng-repeat="i in [1, 2, 3]">{{i}}</li></ul></div></div>');var t=e("options-template");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-inner").text()).toBe("123"),angular.element(t[0]).triggerHandler("blur"),angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-inner").text()).toBe("123")}),it("should support template with ngClick",function(){i.put("custom",'<div class="dropdown-menu"><div class="dropdown-inner"><a class="btn" ng-click="dropdown.counter=dropdown.counter+1">click me</a></div></div>');var t=e("options-template");d.dropdown={counter:0},angular.element(t[0]).triggerHandler("focus"),expect(angular.element(l.find(".dropdown-inner > .btn")[0]).triggerHandler("click")),expect(d.dropdown.counter).toBe(1),angular.element(t[0]).triggerHandler("blur"),angular.element(t[0]).triggerHandler("focus"),expect(angular.element(l.find(".dropdown-inner > .btn")[0]).triggerHandler("click")),expect(d.dropdown.counter).toBe(2)})}),describe("seconds display",function(){it("should hide seconds",function(){var t=e("options-timeFormat");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu thead .btn").length).toBe(2),expect(l.find(".dropdown-menu tbody .btn").length).toBe(2*r.defaults.length),expect(l.find(".dropdown-menu tfoot .btn").length).toBe(2)}),it("should show seconds",function(){var t=e("options-timeFormat-seconds");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu thead .btn").length).toBe(3),expect(l.find(".dropdown-menu tbody .btn").length).toBe(3*r.defaults.length),expect(l.find(".dropdown-menu tfoot .btn").length).toBe(3)})}),describe("keyboard",function(){function n(e){return{start:e[0].selectionStart,end:e[0].selectionEnd}}it("should support keyboard navigation",function(){var n=e("default",{selectedTime:new Date(2014,10,23,8,30,40)});expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(n[0]).triggerHandler("focus"),s.flush(),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("8"),t(n,38),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("7"),t(n,40),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("8"),t(n,39),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe("30"),t(n,38),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe("25"),t(n,40),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe("30")}),it("should support keyboard navigation with seconds",function(){var n=e("options-timeFormat-seconds",{selectedTime:new Date(2014,10,23,8,30,40)});expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(n[0]).triggerHandler("focus"),s.flush(),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("08"),t(n,39),t(n,39),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(4) .btn-primary").text()).toBe("40"),t(n,38),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(4) .btn-primary").text()).toBe("35"),t(n,40),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(4) .btn-primary").text()).toBe("40")}),it("should select date part when using keyboard navigation",function(){var i=e("default",{selectedTime:new Date(2014,10,23,8,30,40)});expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(i[0]).triggerHandler("focus"),s.flush(),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("8"),t(i,40);var r=n(i);expect(r.start).toBe(0),expect(r.end).toBe(1),t(i,40),r=n(i),expect(r.start).toBe(0),expect(r.end).toBe(2),t(i,38),r=n(i),expect(r.start).toBe(0),expect(r.end).toBe(1),t(i,39),r=n(i),expect(r.start).toBe(2),expect(r.end).toBe(4),t(i,38),expect(r.start).toBe(2),expect(r.end).toBe(4)}),it("should select date part when using keyboard navigation with seconds",function(){var i=e("default",{selectedTime:new Date(2014,10,23,8,30,40)});expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(i[0]).triggerHandler("focus"),s.flush(),o.flush(),expect(l.children(".dropdown-menu.timepicker").length).toBe(1),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe("8"),t(i,40),t(i,39),t(i,39),r=n(i),expect(r.start).toBe(5),expect(r.end).toBe(7),t(i,38),expect(r.start).toBe(5),expect(r.end).toBe(7),t(i,39);var r=n(i);expect(r.start).toBe(0),expect(r.end).toBe(1)})}),describe("timeFormat",function(){it("should support a custom timeFormat",function(){var t=e("options-timeFormat");expect(t.val()).toBe("10:30"),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(09)")).triggerHandler("click"),expect(t.val()).toBe("09:30")}),it("should correctly display time with seconds and meridian",function(){var t=e("options-timeFormat-seconds-meridian");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2) .btn-primary").text()).toBe(a(d.selectedTime,"mm")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(4) .btn-primary").text()).toBe(a(d.selectedTime,"ss")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(6) .btn-primary").text()).toBe(a(d.selectedTime,"a"))}),it("should support a custom timeFormat with seconds",function(){var t=e("options-timeFormat-seconds");expect(t.val()).toBe("10:30:42"),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(47)")).triggerHandler("click"),expect(t.val()).toBe("10:30:47")})}),describe("timezone",function(){var t,n=0,i=[new Date(2014,0,1,0,0),new Date(2015,0,1,5,0),new Date(2014,11,31,0,0),new Date(2015,11,31,23,0),new Date(2014,7,1,15,30),new Date(2015,7,1,3,15),new Date(1985,0,11,0,0)];beforeEach(function(){t=e("options-timezone-utc",{selectedTime:i[n]})}),afterEach(function(){n++});for(var o=0;o<i.length;o++)it("should render time in utc timezone",function(){expect(t.val()).toBe(a(i[n],"HH:mm","UTC")),expect(d.selectedTime.toDateString()).toBe(i[n].toDateString())})}),describe("timeType",function(){it("should support a string timeType",function(){var t=e("options-timeType-string");expect(t.val()).toBe("10:30"),expect(d.selectedTime).toBe("10:30"),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(09)")).triggerHandler("click"),expect(t.val()).toBe("09:30"),expect(d.selectedTime).toBe("09:30")}),it("should support a string timeType with a null value",function(){var t=e("options-timeType-string-null");expect(t.val()).toBe(""),expect(d.selectedTime).toBe(null),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:eq(0)")).triggerHandler("click"),expect(t.val()).toBeTruthy(),expect(d.selectedTime).toBeTruthy()}),it("should support a number timeType",function(){var t=e("options-timeType-number");expect(t.val()).toBe("10:30"),expect(d.selectedTime).toBe(new Date(1970,0,1,10,30,42).getTime()),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(09)")).triggerHandler("click"),expect(t.val()).toBe("09:30"),expect(d.selectedTime).toBe(new Date(1970,0,1,9,30,42).getTime())}),it("should support a unix timeType",function(){var t=e("options-timeType-unix");expect(t.val()).toBe("10:30"),expect(d.selectedTime).toBe(new Date(1970,0,1,10,30,42).getTime()/1e3),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(09)")).triggerHandler("click"),expect(t.val()).toBe("09:30"),expect(d.selectedTime).toBe(new Date(1970,0,1,9,30,42)/1e3)}),it("should support a iso timeType",function(){var t=e("options-timeType-iso"),n=new Date(1970,0,1,10,30);expect(t.val()).toBe(n.getHours()+":"+n.getMinutes()),expect(d.selectedTime).toBe(new Date(1970,0,1,10,30,42).toISOString()),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(09)")).triggerHandler("click"),expect(t.val()).toBe("09:30"),expect(d.selectedTime).toBe(new Date(1970,0,1,9,30,42).toISOString())})}),describe("minTime",function(){it("should support a dynamic minTime",function(){var t=e("options-minTime");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeTruthy(),d.minTime="08:30 AM",d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeFalsy()}),it("should support now as minTime",function(){var t=e("options-minTime-now");angular.element(t[0]).triggerHandler("focus"),c.getHours()}),it("should support date object as minTime",function(){var t=e("options-minTime",{minTime:new Date(1970,0,1,9,30)});angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeTruthy(),d.minTime=new Date(1970,0,1,8,30),d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeFalsy()}),it("should ignore date part of date object as minTime",function(){var t=e("options-minTime",{minTime:new Date(1987,6,13,9,30)});angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeTruthy(),d.minTime=new Date(1987,6,13,8,30),d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeFalsy()}),it("should consider empty minTime as no minTime defined",function(){var t=e("options-minTime");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeTruthy(),d.minTime="",d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(8)").is(":disabled")).toBeFalsy()}),it("should validate using minTime",function(){var t=e("options-minTime");t.val("10:00 AM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-min")).toBeTruthy(),t.val("8:00 AM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-invalid-min")).toBeTruthy()}),it("should trigger validation when minTime changes",function(){var t=e("options-minTime");t.val("10:00 AM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-min")).toBeTruthy(),t.val("8:00 AM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-invalid-min")).toBeTruthy(),d.minTime="07:00 AM",d.$digest(),expect(t.hasClass("ng-valid-min")).toBeTruthy()}),it("should ignore date part of ngModel when validating with minTime",function(){var t=e("options-minTime",{selectedTime:new Date(1957,6,13,10,30,42)});angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-min")).toBeTruthy()})}),describe("maxTime",function(){it("should support a dynamic maxTime",function(){var t=e("options-maxTime");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeFalsy(),d.maxTime="10:30 AM",d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeTruthy()}),it("should support now as maxTime",function(){var t=e("options-maxTime-now");angular.element(t[0]).triggerHandler("focus"),c.getHours()}),it("should support date object as maxTime",function(){var t=e("options-maxTime",{maxTime:new Date(1970,0,1,22,30)});angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeFalsy(),d.maxTime=new Date(1970,0,1,10,30),d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeTruthy()}),it("should ignore date part of date object as maxTime",function(){var t=e("options-maxTime",{maxTime:new Date(1927,6,13,22,30)});angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeFalsy(),d.maxTime=new Date(1927,6,13,10,30),d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeTruthy()}),it("should consider empty maxTime as no maxTime defined",function(){var t=e("options-maxTime");angular.element(t[0]).triggerHandler("focus"),d.maxTime="10:30 AM",d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeTruthy(),d.maxTime="",d.$digest(),expect(l.find(".dropdown-menu tbody button:contains(11)").is(":disabled")).toBeFalsy()}),it("should validate using maxTime",function(){var t=e("options-maxTime");t.val("8:00 PM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-max")).toBeTruthy(),t.val("11:00 PM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-invalid-max")).toBeTruthy()}),it("should trigger validation when maxTime changes",function(){var t=e("options-maxTime");t.val("8:00 PM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-max")).toBeTruthy(),t.val("11:00 PM"),angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-invalid-max")).toBeTruthy(),d.maxTime="11:00 PM",d.$digest(),expect(t.hasClass("ng-valid-max")).toBeTruthy()}),it("should ignore date part of ngModel when validating with maxTime",function(){var t=e("options-maxTime",{selectedTime:new Date(1987,6,13,10,30)});angular.element(t[0]).triggerHandler("change"),expect(t.hasClass("ng-valid-max")).toBeTruthy()})}),
describe("useNative",function(){it("should correctly compile template according to useNative",function(){var t=e("options-useNative");angular.element(t[0]).triggerHandler("focus")})}),describe("modelTimeFormat",function(){it("should support a custom modelTimeFormat",function(){var t=e("options-modelTimeFormat");expect(t.val()).toBe("12:20"),angular.element(t[0]).triggerHandler("focus"),angular.element(l.find(".dropdown-menu tbody .btn:contains(13)")).triggerHandler("click"),expect(t.val()).toBe("13:20"),expect(d.selectedTime).toBe("13:20:10"),t.val("10:00"),angular.element(t[0]).triggerHandler("change"),d.$digest(),expect(d.selectedTime).toBe("10:00:10")})}),describe("arrowBehavior",function(){it("should scroll values shown when set to pager",function(){var t=e("options-arrowBehavior");angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),l.find(".dropdown-menu thead button:eq(0)").triggerHandler("click");var n=new Date(d.selectedTime.getTime()-18e6);expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0)").text()).toBe(a(n,"h"))}),it("should change ngModel value when set to picker",function(){var t=e("options-arrowBehavior",{arrowBehavior:"picker"}),n=new Date(d.selectedTime.getTime()+36e5);angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),l.find(".dropdown-menu thead button:eq(0)").triggerHandler("click"),expect(d.selectedTime).toEqual(n)}),it("should change ngModel value when set to picker with an empty model",function(){var t=e("options-arrowBehavior",{arrowBehavior:"picker",selectedTime:"",timeType:"string"}),n=new Date(Date.now()+36e5);angular.element(t[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0) .btn-primary").text()).toBe(a(d.selectedTime,"h")),l.find(".dropdown-menu thead button:eq(0)").triggerHandler("click"),expect(d.selectedTime).toEqual(a(n,"h:00 a"))})}),describe("roundDisplay",function(){var t,n=0,i=[new Date(1970,6,13,10,33,42),new Date(1970,6,13,10,33,0),new Date(1970,6,13,10,0,59),new Date(1970,6,13,10,0,0),new Date(1970,6,13),new Date(1970,6,13,23,59,59)];beforeAll(function(){jasmine.clock().install()}),afterAll(function(){jasmine.clock().uninstall()}),beforeEach(function(){jasmine.clock().mockDate(i[n]),t=new Date}),afterEach(function(){n++}),angular.forEach(i,function(){it("should floor display minutes to nearest minuteStep interval when ngModel value is undefined and roundDisplay is true",function(){var n=e("options-roundDisplay",{selectedTime:void 0,roundDisplay:"true"});t.setMinutes(t.getMinutes()-t.getMinutes()%15),angular.element(n[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0)").text()).toBe(a(t,"h")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2)").text()).toBe(a(t,"mm"))}),it("should floor display minutes to nearest minuteStep interval when ngModel value is undefined and seconds are shown and roundDisplay is true",function(){var n=e("options-roundDisplay-seconds",{selectedTime:void 0,roundDisplay:"true"});t.setMinutes(t.getMinutes()-t.getMinutes()%15),t.setSeconds(0),angular.element(n[0]).triggerHandler("focus"),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(0)").text()).toBe(a(t,"HH")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(2)").text()).toBe(a(t,"mm")),expect(l.find(".dropdown-menu tbody tr:eq(2) td:eq(4)").text()).toBe(a(t,"ss"))})})}),describe("container",function(){it("should append to container if defined",function(){var t=$('<div id="testElm"></div>');l.append(t);var n=e("options-container",{container:"#testElm"});expect(t.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(n[0]).triggerHandler("focus"),expect(t.children(".dropdown-menu.timepicker").length).toBe(1)}),it("should put datepicker in sandbox when container is falsy",function(){var t=e("options-container",{container:"false"});expect(l.children(".dropdown-menu.timepicker").length).toBe(0),angular.element(t[0]).triggerHandler("focus"),expect(l.children(".dropdown-menu.timepicker").length).toBe(1)})}),describe("prefix",function(){it("should call namespaced events through provider",function(){var e=r(l,{$datevalue:new Date},{prefixEvent:"datepicker",scope:d}),t=spyOn(e.$scope,"$emit");d.$digest(),e.show(),e.hide(),o.flush(),expect(t).toHaveBeenCalledWith("datepicker.show.before",e),expect(t).toHaveBeenCalledWith("datepicker.show",e),expect(t).toHaveBeenCalledWith("datepicker.hide.before",e),expect(t).toHaveBeenCalledWith("datepicker.hide",e)}),it("should call namespaced events through directive",function(){var t,n,i,r,a=e("default-with-namespace");d.$on("datepicker.show.before",function(){t=!0}),d.$on("datepicker.show",function(){n=!0}),d.$on("datepicker.hide.before",function(){i=!0}),d.$on("datepicker.hide",function(){r=!0}),angular.element(a[0]).triggerHandler("focus"),o.flush(),expect(t).toBe(!0),expect(n).toBe(!0),angular.element(a[0]).triggerHandler("blur"),o.flush(),expect(i).toBe(!0),expect(r).toBe(!0)})})})});