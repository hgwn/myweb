var Long=function(o,n,t){};Long.fromInt=function(o,n){},Long.fromNumber=function(o,n){},Long.fromBits=function(o,n,t){},Long.from28Bits=function(o,n,t,p){},Long.fromString=function(o,n,t){},Long.ZERO,Long.ONE,Long.NEG_ONE,Long.MAX_SIGNED_VALUE,Long.MIN_SIGNED_VALUE,Long.MAX_UNSIGNED_VALUE,Long.MIN_UNSIGNED_VALUE,Long.MAX_VALUE,Long.MIN_VALUE,Long.prototype.low,Long.prototype.high,Long.prototype.unsigned,Long.prototype.toInt=function(){},Long.prototype.toNumber=function(){},Long.prototype.toString=function(o){},Long.prototype.getHighBits=function(){},Long.prototype.getHighBitsUnsigned=function(){},Long.prototype.getLowBits=function(){},Long.prototype.getLowBitsUnsigned=function(){},Long.prototype.getNumBitsAbs=function(){},Long.prototype.isZero=function(){},Long.prototype.isNegative=function(){},Long.prototype.isOdd=function(){},Long.prototype.isEven=function(){},Long.prototype.equals=function(o){},Long.prototype.notEquals=function(o){},Long.prototype.lessThan=function(o){},Long.prototype.lessThanOrEqual=function(o){},Long.prototype.greaterThan=function(o){},Long.prototype.greaterThanOrEqual=function(o){},Long.prototype.compare=function(o){},Long.prototype.negate=function(){},Long.prototype.add=function(o){},Long.prototype.subtract=function(o){},Long.prototype.multiply=function(o){},Long.prototype.div=function(o){},Long.prototype.modulo=function(o){},Long.prototype.not=function(){},Long.prototype.and=function(o){},Long.prototype.or=function(o){},Long.prototype.xor=function(o){},Long.prototype.shiftLeft=function(o){},Long.prototype.shiftRight=function(o){},Long.prototype.shiftRightUnsigned=function(o){},Long.prototype.toSigned=function(){},Long.prototype.toUnsigned=function(){},Long.prototype.clone=function(){};