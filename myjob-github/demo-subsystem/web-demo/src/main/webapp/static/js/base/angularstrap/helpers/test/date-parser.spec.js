"use strict";describe("dateParser",function(){function e(e){e.forEach(function(e){it("should report isValid("+e.val+")="+e.expect+" ("+e.reason+")",function(){expect(o.isValid(e.val)).toBe(e.expect)})})}function a(e){e.forEach(function(e){it("should return parse("+e.val+")="+e.expect+" ("+e.reason+")",function(){expect(o.parse(e.val)).toEqual(e.expect)})})}var t,i,n,o,r;beforeEach(module("mgcrea.ngStrap.helpers.dateParser")),beforeEach(inject(function(e,a,o,s){i=e,t=a,n=o,r=s})),describe("isValid",function(){describe('date format is "y" (single digit year -- extremely permissive)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"y",strict:!0})}),e([{val:"-1",expect:!0,reason:"negative single digit, no prefix"},{val:"-01",expect:!1,reason:"negative single digit, prefixed"},{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!1,reason:"double digit, prefixed"},{val:"199",expect:!0,reason:"multi digit, no prefix"},{val:"0199",expect:!1,reason:"multi digit, prefixed"},{val:"2099",expect:!0,reason:"many digit, no prefix"},{val:"002099",expect:!1,reason:"many digit, multiple prefixed"},{val:"10000",expect:!1,reason:"only support 4-digit years"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"y",strict:!1})}),e([{val:"-1",expect:!0,reason:"negative single digit, no prefix"},{val:"-01",expect:!0,reason:"negative single digit, prefixed"},{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!0,reason:"double digit, prefixed"},{val:"199",expect:!0,reason:"multi digit, no prefix"},{val:"0199",expect:!0,reason:"multi digit, prefixed"},{val:"2099",expect:!0,reason:"many digit, no prefix"},{val:"002099",expect:!0,reason:"many digit, multiple prefixed"},{val:"10000",expect:!1,reason:"only support 4-digit years"}])})}),describe('date format is "M" (single digit month)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"M",strict:!0})}),e([{val:"0",expect:!1,reason:"invalid date"},{val:"00",expect:!1,reason:"invalid date"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"12",expect:!0,reason:"double digit, no prefix"},{val:"13",expect:!1,reason:"invalid date"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"M",strict:!1})}),e([{val:"0",expect:!1,reason:"invalid date"},{val:"00",expect:!1,reason:"invalid date"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"12",expect:!0,reason:"double digit, no prefix"},{val:"13",expect:!1,reason:"invalid date"}])})}),describe('date format is "MMM" (month initials)',function(){beforeEach(function(){r.id="en-US",o=n({format:"MMM"})}),e([{val:"Feb",expect:!0,reason:"standard month initials"},{val:"FEB",expect:!0,reason:"upper case month initials"},{val:"feb",expect:!0,reason:"lower case month initials"},{val:"Fab",expect:!1,reason:"invalid month initials"}])}),describe('date format is "MMMM" (month name)',function(){beforeEach(function(){r.id="en-US",o=n({format:"MMMM"})}),e([{val:"February",expect:!0,reason:"standard month name"},{val:"FEBRUARY",expect:!0,reason:"upper case month name"},{val:"february",expect:!0,reason:"lower case month name"},{val:"Fabulous",expect:!1,reason:"invalid month name"}])}),describe('date format is "d" (single digit date)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"d",strict:!0})}),e([{val:"0",expect:!1,reason:"invalid date"},{val:"00",expect:!1,reason:"invalid date"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"31",expect:!0,reason:"double digit, no prefix"},{val:"32",expect:!1,reason:"invalid date"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"d",strict:!1})}),e([{val:"0",expect:!1,reason:"invalid date"},{val:"00",expect:!1,reason:"invalid date"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"31",expect:!0,reason:"double digit, no prefix"},{val:"32",expect:!1,reason:"invalid date"}])})}),describe('date format is "dd" (two-digit date)',function(){beforeEach(function(){o=n({format:"dd",strict:!0})}),e([{val:"0",expect:!1,reason:"invalid date"},{val:"00",expect:!1,reason:"invalid date"},{val:"1",expect:!1,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"31",expect:!0,reason:"double digit, no prefix"},{val:"32",expect:!1,reason:"invalid date"}])}),describe('date format is "h" (single digit hour, 12-hour clock)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"h",strict:!0})}),e([{val:"0",expect:!1,reason:"invalid in 12-hour clock"},{val:"00",expect:!1,reason:"invalid in 12-hour clock"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"12",expect:!0,reason:"double digit, no prefix"},{val:"13",expect:!1,reason:"double digit, invalid hour"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"h",strict:!1})}),e([{val:"0",expect:!1,reason:"invalid in 12-hour clock"},{val:"00",expect:!1,reason:"invalid in 12-hour clock"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"12",expect:!0,reason:"double digit, no prefix"},{val:"13",expect:!1,reason:"double digit, invalid hour"}])})}),describe('date format is "H" (single digit hour, 24-hour clock)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"H",strict:!0})}),e([{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!1,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"23",expect:!0,reason:"double digit, no prefix"},{val:"24",expect:!1,reason:"double digit, invalid hour"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"H",strict:!1})}),e([{val:"0",expect:!0,reason:"single digit"},{val:"00",expect:!0,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"23",expect:!0,reason:"double digit, no prefix"},{val:"24",expect:!1,reason:"double digit, invalid hour"}])})}),describe('date format is "m" (single digit minute)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"m",strict:!0})}),e([{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!1,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"59",expect:!0,reason:"double digit, no prefix"},{val:"60",expect:!1,reason:"double digit, too many minutes"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"m",strict:!1})}),e([{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!0,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"59",expect:!0,reason:"double digit, no prefix"},{val:"60",expect:!1,reason:"double digit, too many minutes"}])})}),describe('date format is "s" (single digit second)',function(){describe("strict=true",function(){beforeEach(function(){o=n({format:"s",strict:!0})}),e([{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!1,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!1,reason:"double digit, prefixed"},{val:"59",expect:!0,reason:"double digit, no prefix"},{val:"60",expect:!1,reason:"double digit, too many seconds"}])}),describe("strict=false",function(){beforeEach(function(){o=n({format:"s",strict:!1})}),e([{val:"0",expect:!0,reason:"single digit, no prefix"},{val:"00",expect:!0,reason:"double digit, prefixed"},{val:"1",expect:!0,reason:"single digit, no prefix"},{val:"01",expect:!0,reason:"double digit, prefixed"},{val:"59",expect:!0,reason:"double digit, no prefix"},{val:"60",expect:!1,reason:"double digit, too many seconds"}])})})}),describe("parse",function(){describe('date format "dd/MM/yyyy"',function(){beforeEach(function(){o=n({format:"dd/MM/yyyy"})}),a([{val:"01/01/2014",expect:new Date(2014,0,1),reason:"4 digit year with leading digits"},{val:"20/10/2014",expect:new Date(2014,9,20),reason:"4 digit year unambiguous day/month"},{val:"10/10/2014",expect:new Date(2014,9,10),reason:"4 digit year ambiguous day/month"},{val:"10/10/1814",expect:new Date(1814,9,10),reason:"4 digit year ambiguous day/month with different century"},{val:"30/02/2014",expect:!1,reason:"non-existing month day"}])}),describe('date format "M/d/y"',function(){beforeEach(function(){o=n({format:"M/d/y"})}),a([{val:"1/1/1",expect:new Date(1,0,1),reason:"1 digit year gives one digit year"},{val:"1/1/00",expect:new Date(2e3,0,1),reason:"2 digit year less than fifty gives current century"},{val:"1/1/50",expect:new Date(2050,0,1),reason:"2 digit year equal to fifty gives current century"},{val:"1/1/51",expect:new Date(1951,0,1),reason:"2 digit year greater than fifty gives previous century"},{val:"1/1/99",expect:new Date(1999,0,1),reason:"2 digit year, maximum possible, gives previous century"},{val:"1/1/123",expect:new Date(123,0,1),reason:"3 digit year gives three digit year"},{val:"1/1/2015",expect:new Date(2015,0,1),reason:"4 digit year gives four digit year"}])}),describe('date format "dd/MM/yyyy" with base values',function(){var e=[{val:"01/09/1998",baseVal:new Date(1998,7,31),expect:new Date(1998,8,1)},{val:"01/09/2014",baseVal:new Date(2014,7,31),expect:new Date(2014,8,1)},{val:"01/02/2014",baseVal:new Date(2014,0,31),expect:new Date(2014,1,1)},{val:"31/08/2014",baseVal:new Date(2014,1,25),expect:new Date(2014,7,31)},{val:"45/20/2014",baseVal:new Date(2014,1,25),expect:!1},{val:"2014/08/31",baseVal:new Date(2014,1,25),expect:!1},{val:"2014",baseVal:new Date(2014,1,25),expect:!1},{val:"Jan",baseVal:new Date(2014,1,25),expect:!1},{val:"31/09/2014",baseVal:new Date(2014,1,25),expect:!1}];beforeEach(function(){o=n({format:"dd/MM/yyyy"})}),e.forEach(function(e){it("should parse value ("+e.val+") with base value ("+e.baseVal+")",function(){expect(o.parse(e.val,e.baseVal)).toEqual(e.expect)})})}),describe('date format "yyyy/MM/dd" with base values',function(){var e=[{val:"1998/09/01",baseVal:new Date(1998,7,31),expect:new Date(1998,8,1)},{val:"2014/09/01",baseVal:new Date(2014,7,31),expect:new Date(2014,8,1)},{val:"2014/02/01",baseVal:new Date(2014,0,31),expect:new Date(2014,1,1)},{val:"2014/08/31",baseVal:new Date(2014,1,25),expect:new Date(2014,7,31)},{val:"2014/20/45",baseVal:new Date(2014,1,25),expect:!1},{val:"31/08/2014",baseVal:new Date(2014,1,25),expect:!1},{val:"2014",baseVal:new Date(2014,1,25),expect:!1},{val:"Jan",baseVal:new Date(2014,1,25),expect:!1},{val:"2014/09/31",baseVal:new Date(2014,1,25),expect:!1}];beforeEach(function(){o=n({format:"yyyy/MM/dd"})}),e.forEach(function(e){it("should parse value ("+e.val+") with base value ("+e.baseVal+")",function(){expect(o.parse(e.val,e.baseVal)).toEqual(e.expect)})})}),describe('date format is "MMM" (month initials)',function(){beforeEach(function(){r.id="en-US",o=n({format:"MMM"})}),a([{val:"Feb",expect:new Date(1970,1,1),reason:"standard month initials"},{val:"FEB",expect:new Date(1970,1,1),reason:"upper case month initials"},{val:"feb",expect:new Date(1970,1,1),reason:"lower case month initials"},{val:"Fab",expect:!1,reason:"invalid month initials"}])}),describe('date format is "MMMM" (month name)',function(){beforeEach(function(){r.id="en-US",o=n({format:"MMMM"})}),a([{val:"February",expect:new Date(1970,1,1),reason:"standard month name"},{val:"FEBRUARY",expect:new Date(1970,1,1),reason:"upper case month name"},{val:"february",expect:new Date(1970,1,1),reason:"lower case month name"},{val:"Fabulous",expect:!1,reason:"invalid month name"}])})})});